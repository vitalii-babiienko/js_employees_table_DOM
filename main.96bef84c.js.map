{"version":3,"sources":["scripts/main.js"],"names":["lastIndex","body","document","querySelector","tableHead","tableBody","orderASC","addEventListener","e","rows","index","target","closest","cellIndex","sort","a","b","itemA","cells","innerText","replace","itemB","isNaN","localeCompare","reverse","append","row","selectedRow","classList","remove","add","insertAdjacentHTML","initialCellValue","inputForEditing","pushNotification","title","description","type","message","createElement","className","innerHTML","dataset","qa","setTimeout","wrongNameNotification","wrongPositionNameNotification","wrongOfficeNameNotification","wrongAgeNotification","wrongSalaryNotification","successNotification","form","editTableCell","cellForEditing","matches","contains","contenteditable","textContent","focus","saveEnteredInfo","trimmedInputValue","value","trim","match","parseInt","toLocaleString","preventDefault","data","FormData","dataObject","Object","fromEntries","entries","position","office","age","salary","formattedSalary","name","length","reset","key"],"mappings":"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","file":"main.96bef84c.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst tableHead = document.querySelector('thead');\nconst tableBody = document.querySelector('tbody');\nlet orderASC = true;\nlet lastIndex;\n\ntableHead.addEventListener('click', e => {\n  const rows = [...tableBody.rows];\n  const index = e.target.closest('th').cellIndex;\n\n  rows.sort((a, b) => {\n    const itemA = a.cells[index].innerText.replace(/[$,]/g, '');\n    const itemB = b.cells[index].innerText.replace(/[$,]/g, '');\n\n    return isNaN(itemA)\n      ? itemA.localeCompare(itemB)\n      : itemA - itemB;\n  });\n\n  if (orderASC || lastIndex !== index) {\n    orderASC = !orderASC;\n  } else {\n    rows.reverse();\n    orderASC = !orderASC;\n  }\n\n  lastIndex = index;\n  tableBody.append(...rows);\n});\n\ntableBody.addEventListener('click', e => {\n  const row = e.target.closest('tr');\n  const selectedRow = document.querySelector('.active');\n\n  if (selectedRow) {\n    selectedRow.classList.remove('active');\n  }\n\n  row.classList.add('active');\n});\n\nbody.insertAdjacentHTML('beforeend', `\n  <form class=\"new-employee-form\">\n    <label>Name:\n      <input \n        name=\"name\" \n        data-qa=\"name\"\n      >\n    </label>\n\n    <label>Position:\n      <input \n        name=\"position\" \n        data-qa=\"position\"\n      >\n    </label>\n\n    <label>Office:\n      <select name=\"office\" data-qa=\"office\">\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select>\n    </label>\n\n    <label>Age:\n      <input \n        name=\"age\" \n        type=\"number\" \n        data-qa=\"age\"\n      >\n    </label>\n\n    <label>Salary:\n      <input \n        name=\"salary\" \n        type=\"number\" \n        data-qa=\"salary\"\n      >\n    </label>\n    \n    <button type=\"submit\" value=\"Submit\">\n      Save to table\n    </button>\n  </form>\n`);\n\nconst pushNotification = ({ title, description, type }) => {\n  const message = document.createElement('div');\n\n  message.className = `notification ${type}`;\n\n  message.innerHTML = `\n    <h2 class = \"title\">${title}</h2>\n    <p>${description}</p>\n  `;\n\n  message.dataset.qa = 'notification';\n  body.append(message);\n  setTimeout(() => message.remove(), 2000);\n};\n\nconst wrongNameNotification = {\n  title: 'Wrong Name!',\n  description: 'The Name should have more than 4 letters!',\n  type: 'error',\n};\n\nconst wrongPositionNameNotification = {\n  title: 'Wrong Position Name!',\n  description: 'The position name should have more than 2 letters!',\n  type: 'error',\n};\n\nconst wrongOfficeNameNotification = {\n  title: 'Wrong Office Name!',\n  description: 'The office name should have more than 2 letters!',\n  type: 'error',\n};\n\nconst wrongAgeNotification = {\n  title: 'Wrong Age!',\n  description: 'The employee should be an adult and younger than 90 years!',\n  type: 'error',\n};\n\nconst wrongSalaryNotification = {\n  title: 'Wrong Salary!',\n  description: 'The salary should be a positive number!',\n  type: 'error',\n};\n\nconst successNotification = {\n  title: 'Success!',\n  description: 'A new employee was added to the table!',\n  type: 'success',\n};\n\nconst form = document.querySelector('.new-employee-form');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const data = new FormData(form);\n  const dataObject = Object.fromEntries(data.entries());\n  const { position, office, age, salary } = dataObject;\n  const formattedSalary = '$' + parseInt(salary).toLocaleString('en-US');\n\n  if (dataObject.name.length < 4) {\n    pushNotification(wrongNameNotification);\n\n    return;\n  }\n\n  if (position.length < 2) {\n    pushNotification(wrongPositionNameNotification);\n\n    return;\n  }\n\n  if (age < 18 || age > 90) {\n    pushNotification(wrongAgeNotification);\n\n    return;\n  }\n\n  if (salary < 0 || salary === '') {\n    pushNotification(wrongSalaryNotification);\n\n    return;\n  }\n\n  tableBody.insertAdjacentHTML('beforeend', `\n    <tr>\n      <td>${dataObject.name}</td>\n      <td>${position}</td>\n      <td>${office}</td>\n      <td>${age}</td>\n      <td>${formattedSalary}</td>\n    </tr>\n  `);\n\n  pushNotification(successNotification);\n\n  form.reset();\n});\n\nlet initialCellValue;\nlet inputForEditing;\n\nfunction editTableCell(e) {\n  const cellForEditing = e.target.closest('td');\n\n  if (!e.target.matches('td') || !tableBody.contains(cellForEditing)) {\n    return;\n  }\n\n  cellForEditing.contenteditable = true;\n  initialCellValue = cellForEditing.textContent;\n\n  switch (cellForEditing.cellIndex) {\n    case 3:\n    case 4:\n      cellForEditing.innerHTML = `\n        <input \n          class=\"cell-input\"\n          name=\"cell-for-editing\" \n          type=\"number\"\n          value=\"${initialCellValue}\"\n        >\n      `;\n\n      break;\n\n    default:\n      cellForEditing.innerHTML = `\n        <input \n          class=\"cell-input\"\n          name=\"cell-for-editing\" \n          type=\"text\"\n          value=\"${initialCellValue}\"\n        >\n      `;\n  }\n\n  inputForEditing = document.querySelector('.cell-input');\n\n  inputForEditing.focus();\n  cellForEditing.focus();\n};\n\nfunction saveEnteredInfo(e) {\n  const cellForEditing = e.target.closest('td');\n  const trimmedInputValue = inputForEditing.value.trim();\n\n  const regexForTheNameField = /^([a-z ]{4,})$/gim;\n  const regexForPositionNameField = /^([a-z ]{2,})$/gim;\n  const regexForOfficeNameField = /^([a-z ]{2,})$/gim;\n  const regexForAgeField = /^(1[89]|[2-8][0-9]|90)$/;\n  const regexForSalaryField = /^([0-9]{1,})$/;\n\n  switch (cellForEditing.cellIndex) {\n    case 0:\n      if (!trimmedInputValue.match(regexForTheNameField)) {\n        pushNotification(wrongNameNotification);\n        cellForEditing.textContent = initialCellValue;\n        inputForEditing.remove();\n\n        return;\n      }\n\n      break;\n\n    case 1:\n      if (!trimmedInputValue.match(regexForPositionNameField)) {\n        pushNotification(wrongPositionNameNotification);\n        cellForEditing.textContent = initialCellValue;\n        inputForEditing.remove();\n\n        return;\n      }\n\n      break;\n\n    case 2:\n      if (!trimmedInputValue.match(regexForOfficeNameField)) {\n        pushNotification(wrongOfficeNameNotification);\n        cellForEditing.textContent = initialCellValue;\n        inputForEditing.remove();\n\n        return;\n      }\n\n      break;\n\n    case 3:\n      if (!trimmedInputValue.match(regexForAgeField)) {\n        pushNotification(wrongAgeNotification);\n        cellForEditing.textContent = initialCellValue;\n        inputForEditing.remove();\n\n        return;\n      }\n\n      break;\n\n    case 4:\n      if (!trimmedInputValue.match(regexForSalaryField)) {\n        pushNotification(wrongSalaryNotification);\n        cellForEditing.textContent = initialCellValue;\n        inputForEditing.remove();\n\n        return;\n      } else {\n        cellForEditing.textContent\n          = '$' + parseInt(trimmedInputValue).toLocaleString('en-US');\n        inputForEditing.remove();\n\n        return;\n      }\n  }\n\n  cellForEditing.textContent = trimmedInputValue;\n  inputForEditing.remove();\n}\n\ntableBody.addEventListener('dblclick', editTableCell);\ntableBody.addEventListener('focusout', saveEnteredInfo);\n\ntableBody.addEventListener('keypress', e => {\n  if (e.key === 'Enter') {\n    saveEnteredInfo(e);\n  }\n});\n"]}